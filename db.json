{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/image/20170223174812.png","path":"image/20170223174812.png","modified":0,"renderable":0},{"_id":"source/image/20170223175427.png","path":"image/20170223175427.png","modified":0,"renderable":0},{"_id":"source/image/20170223175801.png","path":"image/20170223175801.png","modified":0,"renderable":0},{"_id":"themes/alpha-dust/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/alpha-dust/source/img/bg-pattern.png","path":"img/bg-pattern.png","modified":0,"renderable":1},{"_id":"themes/alpha-dust/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"source/image/20170224160822.png","path":"image/20170224160822.png","modified":0,"renderable":0},{"_id":"source/image/20170224163724.png","path":"image/20170224163724.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/about.md","hash":"29c60739bb7ead1b6337410f3473c75beba6d731","modified":1487902141065},{"_id":"source/hello-world.md","hash":"10d93534fe6733d4ffb81e97f82cf4971900ade1","modified":1487838170399},{"_id":"themes/alpha-dust/.gitignore","hash":"a5a49e4d5dfb97857856eb6b0cdb2c93a387718f","modified":1487816345196},{"_id":"themes/alpha-dust/LICENSE","hash":"9603ca6555bd5f0710038003b8a503bd29ca67a1","modified":1487816345196},{"_id":"themes/alpha-dust/README.md","hash":"402518c350275303ede195a62e9e05bfa236b190","modified":1487816345196},{"_id":"themes/alpha-dust/_config.yml","hash":"9ba4a7c54b4aa7d28558575cc3644aec24d66452","modified":1487836914573},{"_id":"source/_posts/2017-02-23-如何使用gitHub和Hexo搭建个人博客.md","hash":"7fedfbde188ef2d20a6f8a1f17a0bf41bad7ee6e","modified":1487926408671},{"_id":"source/image/20170223174812.png","hash":"7c70d7271498cf2b11de6924c91a8c8e0c3e4245","modified":1487843322127},{"_id":"source/image/20170223175427.png","hash":"b3c0933df333bb88719d045ee3f2a099749aecdb","modified":1487843677200},{"_id":"source/image/20170223175801.png","hash":"96e6764bb6097dcd32c456b66fbfcd4ef9493953","modified":1487843890806},{"_id":"themes/alpha-dust/languages/default.yml","hash":"f0e62ce15272b2c59c9ae7f7615a286c69bf7113","modified":1487816345197},{"_id":"themes/alpha-dust/languages/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1487816345197},{"_id":"themes/alpha-dust/languages/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1487816345198},{"_id":"themes/alpha-dust/languages/en.yml","hash":"f0e62ce15272b2c59c9ae7f7615a286c69bf7113","modified":1487816345198},{"_id":"themes/alpha-dust/languages/fr.yml","hash":"10e3529b8492d7a7601d5b35b44d8fc9e8ea8d1b","modified":1487816345198},{"_id":"themes/alpha-dust/languages/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1487816345198},{"_id":"themes/alpha-dust/languages/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1487816345199},{"_id":"themes/alpha-dust/languages/pt.yml","hash":"6a31d548092af8af9f25d859063b0589c23ce13a","modified":1487816345199},{"_id":"themes/alpha-dust/languages/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1487816345200},{"_id":"themes/alpha-dust/languages/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1487816345200},{"_id":"themes/alpha-dust/languages/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1487816345200},{"_id":"themes/alpha-dust/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1487816345190},{"_id":"themes/alpha-dust/.git/config","hash":"98931bdd37caa3edab80148c0d8d75a0a44f47de","modified":1487816345193},{"_id":"themes/alpha-dust/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1487816332937},{"_id":"themes/alpha-dust/.git/index","hash":"41d1ae3d527432a23e4417038314560d16f0a41e","modified":1487816345236},{"_id":"themes/alpha-dust/.git/packed-refs","hash":"78b1fd0f38dda2c458f7e05bf650c3f763e3cc62","modified":1487816345186},{"_id":"themes/alpha-dust/template/archive.html","hash":"6152dc2e093c1431cbe2fa6bc9cb54751c2a7f86","modified":1487816345213},{"_id":"themes/alpha-dust/template/index.html","hash":"674b2011f068af9bf464ac77aafccf6867fcd7c0","modified":1487816345235},{"_id":"themes/alpha-dust/template/post.html","hash":"daed2747ec15affef2fe1d5cc05432361a2ed6f9","modified":1487816345236},{"_id":"themes/alpha-dust/layout/archive.ejs","hash":"30620dd5e4f24e9d624c235dd16396c5e130deef","modified":1487816345206},{"_id":"themes/alpha-dust/layout/index.ejs","hash":"0dcf6f1b66722ddadb7479f4edf20281d30a7879","modified":1487816345206},{"_id":"themes/alpha-dust/layout/layout.ejs","hash":"9d1ba5fb467ab4269cbc925b3f2122a29b821b8d","modified":1487816345206},{"_id":"themes/alpha-dust/layout/page.ejs","hash":"953256db94b3ed9ce2870d4b9203fe3a1e5b37bb","modified":1487816345206},{"_id":"themes/alpha-dust/layout/post.ejs","hash":"4030d46464fd653c0e72a7615c19e7b2d73aa21d","modified":1487816345207},{"_id":"themes/alpha-dust/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1487816332945},{"_id":"themes/alpha-dust/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1487816332956},{"_id":"themes/alpha-dust/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1487816332956},{"_id":"themes/alpha-dust/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1487816332956},{"_id":"themes/alpha-dust/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1487816332957},{"_id":"themes/alpha-dust/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1487816332958},{"_id":"themes/alpha-dust/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1487816332958},{"_id":"themes/alpha-dust/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1487816332959},{"_id":"themes/alpha-dust/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1487816332959},{"_id":"themes/alpha-dust/.git/logs/HEAD","hash":"f7385674cc5cb27c3cb14aef6a833f0ea7f869c0","modified":1487816345192},{"_id":"themes/alpha-dust/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1487816332960},{"_id":"themes/alpha-dust/template/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1487816345214},{"_id":"themes/alpha-dust/template/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1487816345215},{"_id":"themes/alpha-dust/template/css/style.css","hash":"9c3710b32a4466c3ea5b6232a1af8fccc5877216","modified":1487816345215},{"_id":"themes/alpha-dust/template/css/style.styl","hash":"a3d739266fbf9aff73443cf745e4a4d5c284cffc","modified":1487816345216},{"_id":"themes/alpha-dust/template/img/bg-pattern copy.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1487816345233},{"_id":"themes/alpha-dust/template/img/bg-pattern-blue.png","hash":"07016986a35c5bfc04c1599829d6a4798c966731","modified":1487816345233},{"_id":"themes/alpha-dust/template/img/bg-pattern.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1487816345233},{"_id":"themes/alpha-dust/template/img/hex-bg.png","hash":"a8444a553dd0fd7db09eda830bd3346cc87fc60e","modified":1487816345234},{"_id":"themes/alpha-dust/template/js/main.js","hash":"ed46e32f0bf6f4502a6558f9ad03843031dc318d","modified":1487816345235},{"_id":"themes/alpha-dust/source/css/style.styl","hash":"17454ba3eef92075c4848bb43fd626b53760334b","modified":1487816345211},{"_id":"themes/alpha-dust/source/img/bg-pattern.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1487816345211},{"_id":"themes/alpha-dust/source/js/main.js","hash":"e644dd5c0742f209072c48499c1beba20bc1e496","modified":1487816345212},{"_id":"themes/alpha-dust/layout/_partial/after-footer.ejs","hash":"43ad85ba781c3c98354e9873fe8a49fe50f08bb4","modified":1487816345201},{"_id":"themes/alpha-dust/layout/_partial/article-archive.ejs","hash":"f9608407a583bff104acb07c03fd8108056798c7","modified":1487816345201},{"_id":"themes/alpha-dust/layout/_partial/article-long.ejs","hash":"65df8414a4b479033c0f67e066064351f0b2216f","modified":1487816345202},{"_id":"themes/alpha-dust/layout/_partial/article-short.ejs","hash":"8158759b81ea61b07873f4e7360ec631ca0930ca","modified":1487816345202},{"_id":"themes/alpha-dust/layout/_partial/comments.ejs","hash":"b0bb9c59f517302348aafcb2b832513d53d59055","modified":1487816345202},{"_id":"themes/alpha-dust/layout/_partial/footer.ejs","hash":"b07b8f7f43811e1b6f5382f6eb4cd778a70bd3cc","modified":1487816345203},{"_id":"themes/alpha-dust/layout/_partial/footer_recent_posts.ejs","hash":"8c20579849498be304e47d0f10d42149971eb352","modified":1487816345204},{"_id":"themes/alpha-dust/layout/_partial/footer_categories.ejs","hash":"f85cb280ae965fdd1d92af8bc0ece6c4d826a449","modified":1487816345203},{"_id":"themes/alpha-dust/layout/_partial/gallery.ejs","hash":"63c93ed2dc9c5d9eefeaa8130e9728848731fa64","modified":1487816345204},{"_id":"themes/alpha-dust/layout/_partial/google-analytics.ejs","hash":"b287b7f66a53b51c7cd872ad1b15dfd20fb3e35d","modified":1487816345204},{"_id":"themes/alpha-dust/layout/_partial/head.ejs","hash":"3132acfe6658f31db95a4dae6d818b09b9156d59","modified":1487816345205},{"_id":"themes/alpha-dust/layout/_partial/header.ejs","hash":"4fa635135f97eaa5f324cf83cb04b083ffdd979f","modified":1487816345205},{"_id":"themes/alpha-dust/layout/_partial/menu.ejs","hash":"760cdaf07f808c9e8637f58e412aea43c4021ec2","modified":1487816345205},{"_id":"themes/alpha-dust/layout/_partial/pagination.ejs","hash":"58982acc8dc2b83c6c2cdf64a2c4156e947254d0","modified":1487816345205},{"_id":"themes/alpha-dust/template/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1487816345219},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1487816345220},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1487816345231},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1487816345233},{"_id":"themes/alpha-dust/template/img/session_image.jpeg","hash":"5a3669c0564044f56cb7cea464119a8e388fb18f","modified":1487816345234},{"_id":"themes/alpha-dust/.git/objects/pack/pack-8dea739ca7f74267633bed1bff11b39744b8846a.idx","hash":"510d061c567b12e8c14d13b1c796c8bcdb79b07f","modified":1487816344342},{"_id":"themes/alpha-dust/.git/refs/heads/master","hash":"7d9297b966a6f77c88162119c9a37350773868c4","modified":1487816345191},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1487816345230},{"_id":"themes/alpha-dust/source/css/_partial/base.styl","hash":"00300febf434b78ad93087e83481d2bf9d2c54a5","modified":1487816345208},{"_id":"themes/alpha-dust/source/css/_partial/code.styl","hash":"6c0788e0616a366234157abd18cb6a11b4dc8bfc","modified":1487816345208},{"_id":"themes/alpha-dust/source/css/_partial/footer.styl","hash":"a741adad7f208787c5d863a443da9a3438a01331","modified":1487816345208},{"_id":"themes/alpha-dust/source/css/_partial/header.styl","hash":"d74c2d8968b909c4e2cdab2235b5cebf6eef91c8","modified":1487816345209},{"_id":"themes/alpha-dust/source/css/_partial/archive.styl","hash":"e51d15046b9e10d4342b67bb83fd3a0c42f5d60e","modified":1487816345207},{"_id":"themes/alpha-dust/source/css/_partial/menu.styl","hash":"7419c10bf98d059fa0263427c68e009cc0d4c4fa","modified":1487816345209},{"_id":"themes/alpha-dust/source/css/_partial/pagination.styl","hash":"7dfcf43dd05063115f7ebf9e63219a102b35a3ba","modified":1487816345210},{"_id":"themes/alpha-dust/source/css/_partial/post-content.styl","hash":"c3f0ae13c8a953e957da23db6ef7dab2b8217352","modified":1487816345210},{"_id":"themes/alpha-dust/source/css/_partial/post-layout.styl","hash":"bc8376e97266f047457117a965321efdd58e68a3","modified":1487816345210},{"_id":"themes/alpha-dust/source/css/_partial/variables.styl","hash":"f1dbc90648d67e03ba3b311c967977aa50888b38","modified":1487816345211},{"_id":"themes/alpha-dust/.git/logs/refs/heads/master","hash":"f7385674cc5cb27c3cb14aef6a833f0ea7f869c0","modified":1487816345192},{"_id":"themes/alpha-dust/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1487816345189},{"_id":"themes/alpha-dust/template/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1487816345226},{"_id":"themes/alpha-dust/.git/logs/refs/remotes/origin/HEAD","hash":"f7385674cc5cb27c3cb14aef6a833f0ea7f869c0","modified":1487816345189},{"_id":"themes/alpha-dust/.git/objects/pack/pack-8dea739ca7f74267633bed1bff11b39744b8846a.pack","hash":"aff8e69941531aea3f2393b822c869dab1dfd8c4","modified":1487816344358},{"_id":"public/hello-world.html","hash":"e58e7822e5207183f5e44ea4b55114b4a689a27a","modified":1487926440779},{"_id":"public/2017/02/23/如何使用gitHub和Hexo搭建个人博客/index.html","hash":"dab9cd50c9e7bbcf06f4c2dd37e8d8a0df628f4a","modified":1487926440779},{"_id":"public/archives/index.html","hash":"0c3c9749195fb16b93524785689c9067988858ef","modified":1487926440779},{"_id":"public/archives/2017/index.html","hash":"55bbce0c569cd1c5212d019f195437575518d70e","modified":1487926440779},{"_id":"public/index.html","hash":"597f9bf86b6c6be7e3a514f90018853a1041bb6d","modified":1487926440779},{"_id":"public/archives/2017/02/index.html","hash":"e9333d7477c82c5c0c417af9594739666d97b70f","modified":1487926440779},{"_id":"public/tags/Hexo/index.html","hash":"90e8fd7c5f099f7663bd7e5c0beb2d9c87733cb4","modified":1487902155590},{"_id":"public/tags/web/index.html","hash":"9729695707b4f9d4938ef7f664528de3df07d8a6","modified":1487902155590},{"_id":"public/tags/github/index.html","hash":"8e6082150786886ce8a960a6b7bdf3f328d308f8","modified":1487902155590},{"_id":"public/about.html","hash":"9979c1e05570a89b85275afcc67d7169d3dde482","modified":1487926440779},{"_id":"public/image/20170223175427.png","hash":"b3c0933df333bb88719d045ee3f2a099749aecdb","modified":1487902155592},{"_id":"public/image/20170223175801.png","hash":"96e6764bb6097dcd32c456b66fbfcd4ef9493953","modified":1487902155592},{"_id":"public/img/bg-pattern.png","hash":"932374ff0b431bf83d092948e1714d90254dd92e","modified":1487902155592},{"_id":"public/image/20170223174812.png","hash":"7c70d7271498cf2b11de6924c91a8c8e0c3e4245","modified":1487902155592},{"_id":"public/css/style.css","hash":"a8b4312a0a6e600e3c1629df20e2860757370d10","modified":1487902155860},{"_id":"public/js/main.js","hash":"7ee829ab42cf4d81280d20b5d664759436b19075","modified":1487902155860},{"_id":"source/contact.md","hash":"04427946bee3b138078d18e847fe8562ecc7f26c","modified":1487902894215},{"_id":"public/contact.html","hash":"73763bbce78ff1137226a088519f9722157a1835","modified":1487926440779},{"_id":"source/image/20170224160822.png","hash":"78a9edac5da4fb320dcabea116452c127123ecf1","modified":1487923764752},{"_id":"public/image/20170224160822.png","hash":"78a9edac5da4fb320dcabea116452c127123ecf1","modified":1487925029137},{"_id":"source/image/20170224163724.png","hash":"70da4674d268cc70a0ff1f4189e67dab5639563d","modified":1487925452242},{"_id":"public/image/20170224163724.png","hash":"70da4674d268cc70a0ff1f4189e67dab5639563d","modified":1487926440783}],"Category":[],"Data":[],"Page":[{"title":"ABOUT","_content":"\nHi,欢迎访问我的博客,博主的工作是Android App开发,平时对其他各种技术也有兴趣,本博客会更新一些我平常工作和业余接触到的技术知识,以Android开发为主,博主也是半个技术小白,目前正在自我进化中,如果各位看到文章中有错误或者想要提问,欢迎与我联系,我会尽快改正或尽力解答.\n\n本博客使用[Hexo](https://hexo.io/)搭建,部署在[GitHub Pages](https://pages.github.com/)上.使用[alpha-dust](https://github.com/klugjo/hexo-theme-alpha-dust)主题.\n\n感谢Hexo提供了优秀的博客静态生成部署框架,也感谢GitHub Page提供免费的网页部署空间,也感谢[klugjo](https://github.com/klugjo)提供了这个充满科技感的Hexo主题.","source":"about.md","raw":"---\ntitle: ABOUT\n---\n\nHi,欢迎访问我的博客,博主的工作是Android App开发,平时对其他各种技术也有兴趣,本博客会更新一些我平常工作和业余接触到的技术知识,以Android开发为主,博主也是半个技术小白,目前正在自我进化中,如果各位看到文章中有错误或者想要提问,欢迎与我联系,我会尽快改正或尽力解答.\n\n本博客使用[Hexo](https://hexo.io/)搭建,部署在[GitHub Pages](https://pages.github.com/)上.使用[alpha-dust](https://github.com/klugjo/hexo-theme-alpha-dust)主题.\n\n感谢Hexo提供了优秀的博客静态生成部署框架,也感谢GitHub Page提供免费的网页部署空间,也感谢[klugjo](https://github.com/klugjo)提供了这个充满科技感的Hexo主题.","date":"2017-02-24T02:09:01.065Z","updated":"2017-02-24T02:09:01.065Z","path":"about.html","comments":1,"layout":"page","_id":"cizj6iypw00007srlfjfi7dve","content":"<p>Hi,欢迎访问我的博客,博主的工作是Android App开发,平时对其他各种技术也有兴趣,本博客会更新一些我平常工作和业余接触到的技术知识,以Android开发为主,博主也是半个技术小白,目前正在自我进化中,如果各位看到文章中有错误或者想要提问,欢迎与我联系,我会尽快改正或尽力解答.</p>\n<p>本博客使用<a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>搭建,部署在<a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">GitHub Pages</a>上.使用<a href=\"https://github.com/klugjo/hexo-theme-alpha-dust\" target=\"_blank\" rel=\"external\">alpha-dust</a>主题.</p>\n<p>感谢Hexo提供了优秀的博客静态生成部署框架,也感谢GitHub Page提供免费的网页部署空间,也感谢<a href=\"https://github.com/klugjo\" target=\"_blank\" rel=\"external\">klugjo</a>提供了这个充满科技感的Hexo主题.</p>\n","excerpt":"","more":"<p>Hi,欢迎访问我的博客,博主的工作是Android App开发,平时对其他各种技术也有兴趣,本博客会更新一些我平常工作和业余接触到的技术知识,以Android开发为主,博主也是半个技术小白,目前正在自我进化中,如果各位看到文章中有错误或者想要提问,欢迎与我联系,我会尽快改正或尽力解答.</p>\n<p>本博客使用<a href=\"https://hexo.io/\">Hexo</a>搭建,部署在<a href=\"https://pages.github.com/\">GitHub Pages</a>上.使用<a href=\"https://github.com/klugjo/hexo-theme-alpha-dust\">alpha-dust</a>主题.</p>\n<p>感谢Hexo提供了优秀的博客静态生成部署框架,也感谢GitHub Page提供免费的网页部署空间,也感谢<a href=\"https://github.com/klugjo\">klugjo</a>提供了这个充满科技感的Hexo主题.</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n$ hexo sadfdsaf\n$ hexo sdfsadfs\n```\n\n``` java\nint i = 0;\nint j = 0;\nbreak;\nObject o = new Object(this);\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n$ hexo sadfdsaf\n$ hexo sdfsadfs\n```\n\n``` java\nint i = 0;\nint j = 0;\nbreak;\nObject o = new Object(this);\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","date":"2017-02-24T01:04:11.170Z","updated":"2017-02-23T08:22:50.399Z","path":"hello-world.html","comments":1,"layout":"page","_id":"cizj6iypy00017srls8gpxflo","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div><div class=\"line\">$ hexo sadfdsaf</div><div class=\"line\">$ hexo sdfsadfs</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">break</span>;</div><div class=\"line\">Object o = <span class=\"keyword\">new</span> Object(<span class=\"keyword\">this</span>);</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div><div class=\"line\">$ hexo sadfdsaf</div><div class=\"line\">$ hexo sdfsadfs</div></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\"><span class=\"keyword\">break</span>;</div><div class=\"line\">Object o = <span class=\"keyword\">new</span> Object(<span class=\"keyword\">this</span>);</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"CONTACT","_content":"\n- Email : [515073770@qq.com](mailto:515073770@qq.com)\n- GitHub : [https://github.com/ShikiEiki](https://github.com/ShikiEiki)\n- Weibo : [猫山四季](http://weibo.com/fhshiki)\n- QQ : 515073770","source":"contact.md","raw":"---\ntitle: CONTACT\n---\n\n- Email : [515073770@qq.com](mailto:515073770@qq.com)\n- GitHub : [https://github.com/ShikiEiki](https://github.com/ShikiEiki)\n- Weibo : [猫山四季](http://weibo.com/fhshiki)\n- QQ : 515073770","date":"2017-02-24T02:21:34.215Z","updated":"2017-02-24T02:21:34.215Z","path":"contact.html","comments":1,"layout":"page","_id":"cizj73jvc00006srlhqjpa2sc","content":"<ul>\n<li>Email : <a href=\"mailto:515073770@qq.com\" target=\"_blank\" rel=\"external\">515073770@qq.com</a></li>\n<li>GitHub : <a href=\"https://github.com/ShikiEiki\" target=\"_blank\" rel=\"external\">https://github.com/ShikiEiki</a></li>\n<li>Weibo : <a href=\"http://weibo.com/fhshiki\" target=\"_blank\" rel=\"external\">猫山四季</a></li>\n<li>QQ : 515073770</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li>Email : <a href=\"mailto:515073770@qq.com\">515073770@qq.com</a></li>\n<li>GitHub : <a href=\"https://github.com/ShikiEiki\">https://github.com/ShikiEiki</a></li>\n<li>Weibo : <a href=\"http://weibo.com/fhshiki\">猫山四季</a></li>\n<li>QQ : 515073770</li>\n</ul>\n"}],"Post":[{"title":"如何使用github和Hexo搭建个人博客","date":"2017-02-23T07:05:13.000Z","_content":"\n\n## 为什么要写个人博客?\n这一阵子是项目间隙,略闲,之前的项目中学到了很多东西,一直没有时间整理沉淀,现在终于有时间了,列了个计划打算把各种遇到问题和解决经验沉淀到文字里,方便自己今后查看,同时也可以分享给别人,利人利己.\n\n之前工作之余有些零碎经验都是写到网易云笔记之类的笔记应用里,这样虽然比较方便,但是不分享的话别人就不能看,不如博客这种形式,谁都可以搜到,更加便于传播.而且作为一个码农,拥有一个高大上的技术博客,也是一件高逼格的事不是吗 ^_^\n\n## 为什么要自己搭建博客系统?\n想要写一个技术博客,有很多种途径,比较快速简单的方法是找一个像CSDN blo这样的博客平台,申请一个账号直接就可以写,但是总觉得作为程序员,这样还不够酷.那么为什么尝试不自己搭建一个博客试试呢?既可以满足写博客的需求,也可以在搭建的过程中学习web相关的知识,一举两得.而且自己搭建博客可以不用被博客平台的框架束缚,博客的可定制性更强,我们想加什么就可以加什么,那不是更爽?\n\n所以,我果断放弃了博客平台,自己搭架子!开干!\n\n## 大体上需要做什么工作?\n博主毕业以后一直是从事Android App的开发,对web前端的工作接触的比较少,除了计算机和网络的基础知识,几乎是0基础.在查了很多资料以后,大致了解到搭建博客系统主要需要解决两个问题.\n\n1. 怎样便捷的把我们文章中的文字编码成网页文件,并且组织分类建立一个博客网站?\n2. 我们的博客网页文件放在什么地方?\n\n### 博客框架介绍\n以博主的web开发能力,每篇文章都自己写网页是不现实的,而即使是web开发大神,也不会所有网页都自己写,因为太麻烦太繁琐了.\n那么有没有什么自动化的整理排版网页生成工具可以用呢?当然有!我们需要利用博客框架来自动生成网页文件.\n\n博客框架是指一个自动化的程序,我们只需要以框架要求的语法(如markdown)提供我们博客文章的材料,它就会自动帮我们排版文字,转换成网页文件,生成网页层级组织,生成网站首页,一切都是全自动的,我们只需要关心我们文章的内容就够了.自动化万岁!\n\n\n而博客框架一般分为**动态页面框架**和**静态页面框架**两种.\n#### 动态框架\n动态页面框架是指用户在访问我们的网站的时候,所有的网页都是在访问的时候动态生成的,平时没有,访问的时候现场生成,这种框架的好处是搭建简单,现用现做,支持评论互动,功能比较强大.但是需要服务器支持php和数据库.这一类的框架比较著名的是WordPress.\n由于这类框架要求服务器有数据库和php支持,本篇文章暂时不讨论,我会在今后的文章中写一写如何使用vps+wordpress搭建个人博客.\n\n#### 静态框架\n这一类的框架是指我们每次在写完文章后启动框架为我们生成一套网页文件，这套文件部署在服务器上供别人访问，其中的内容是不会变动的，直到我们下次修改或写新的文章后再生成一套新的文件部署到服务器后，网站的内容才会改变．网站上的内容是静态的，因此成为静态博客框架．这类框架比较有名的就是今天要介绍的Hexo.\n这类框架的好处是对服务器要求简单,不需要php和数据库支持.但是比如文章评论等动态改变网页内容的功能,在这种框架中生成的网页中就无法实现了(事实上,如果一定要使用评论功能,可以使用Disque之类的第三方服务集成到Hexo生成的网站中来实现评论,原理还是利用第三方的服务商的数据库和服务器来存放评论数据,本文就不多介绍了).\n\n### 网页存放空间介绍\n我们的网页生成了以后,我们还要找地方去存放它们,这时候我们就有了很多选择.\n\n#### 购买VPS\nVPS是虚拟服务器的简写,相当于一台完整的计算机,可以安装软件,存放数据,下载上传,但是它不在我们面前,而是在VPS服务商的机房里,我们只能通过远程去操作这台计算机.\n由于VPS就相当于一台完整的计算机,所以我们在上面的可操作性比较大,我们可以安装服务器程序用来提供网页下载服务,安装php提供后端处理能力,安装mysql提供数据库服务.非常灵活.因此VPS可以同时支持动态博客框架和静态博客框架.\n\n#### 使用Github pages\nGitHub Pages是GitHub提供的一项免费服务.每个GitHub账号可以申请一个pages仓库用来存放网页文件.而GitHub在已经安装好了服务器程序以便于浏览器访问这些网页.由于GitHub Pages不支持php和数据库,因此只能在上面部署静态博客框架.\n\n## 为什么选择GitHub pages + Hexo?\n看起来GitHub pages比起VPS限制很多,但是Github pages有一个巨大的优势——免费!没错,它是免费的!\n一般国外的VPS像Vurtl、Linode这样的便宜的也要35-40/月,稍微靠谱点的就100+/月了,国内的就更贵,带宽流量限制不说,最便宜的也得60+大洋,这个成本对于个人博客来说太高了.而使用GitHub page,可以免费获得每个账号300M的网页存放空间.对于个人来说足够了,而且GitHub也是程序员牛人聚集的地方,很多大牛也是用GitHub pages搭建自己的博客,因此这也是一件很有逼格的事!\n对于博客框架,动态框架由于需要数据库和php支持,因此就不能使用了,但是静态框架还是可以用的.而Hexo也是现在使用比较广的,也比较简单部署的静态框架.所以我们选择GitHub pages + Hexo来部署我们的博客.\n\n那么,既然方案确定了,那就剩实施了,我们一步一步来完成:\n\n\n## 如何获得github page网页空间?\n使用github我们当然需要先安装git,如果你没有用过git,请先学习一下[Git使用教程](http://www.cnblogs.com/tugenhua0707/p/4050072.html).\n获得github page空间非常简单.首先,你得有一个女朋...啊不对,是github账号,如果你已经有了,那非常好!如果没有,快去[注册一个](https://github.com/join?source=header-home),这个网站对程序员非常有用,真的!\n\n有了github账号之后我们需要按照特定的规则申请github page的数据仓库(repository).\n\n第一步我们点击sign in登录github.\n![](/image/20170223175427.png)\n\n第二步我们点击New repository建立一个新的仓库\n![](/image/20170223174812.png)\n\n第三步在仓库名称里面输入**我们的用户名.github.io**.\n注意!必须是这个名字,其他的名字不行!\n比如我们的用户名是aaa,我们的仓库名就必须是aaa.github.io\n![](/image/20170223175801.png)\n\n第四步选择public,并且点击create repository建立仓库\n\n建立好之后我们就已经有了自己的网页存放空间啦!对!就这么简单!今后通过\n``` \nhttp://我们的用户名.github.io\n```\n就能访问我们的博客啦.\n\n今后我们部署网页的时候只要先clone我们的仓库,然后修改其中的内容(例如添加网页删除网页等),最后commit + push到github上就可以了.当然,这也很麻烦,所以Hexo为我们提供了一键生成+发布的功能,今后连commit+push也可以省去啦,这个我们后面会说.\n\n## 如何部署Hexo框架?\nHexo需要部署在我们自己的计算机上,由于Hexo是基于Nodejs编写的,所以我们首先需要安装Nodejs\n\n在[Nodejs官网](https://nodejs.org/en/)上下载并安装Nodejs.\n\n安装完毕后在我们的电脑里建立一个新的文件夹来存放我们的博客工程文件,例如D:/blog\n\n在文件夹里右键选择git bash 打开命令行\n\n使用npm安装Hexo\n\n``` bash\nnpm install -g hexo-cli\n```\n-g参数是要求全局安装,这样我们以后就可以直接在命令行里使用hexo命令了.\n由于npm安装在国内速度简直是龟速,在使用npm install安装的时候建议使用vpn代理加快安装.\n\n由于我们要提交到github上,我们还需要安装hexo git提交插件.\n``` base\nnpm install hexo-deployer-git --save\n```\n\n下面初始化博客工程\n\n``` bash\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n上面的folder为博客的工程名,我们可以自己起,例如testBlog\n\n完毕以后我们可以进入我们之前初始化好的文件夹,例如D:/blog/testBlog中,修改_config.yml文件来调整hexo的设置.\n\n> title: 这里填写博客的标题\n> subtitle: 这里填写博客的副标题\n> description: 这里填写博客的描述\n> author: 这里填写博客的作者\n> language: 这里填写博客的语言,如果是中文填写\"zh\"\n> url: 这里填写我们之前申请的博客网页存放空间的网址,例如我们的github用户名为\"aaa\",这里就填写\"http://aaa.github.io\"\n> deploy:\n> type: 这里填写\"git\"\n> repo: 这里填写我们之前申请的git仓库的地址,例如我们的用户名为\"aaa\",则此处填写\"git@github.com:aaa/aaa.github.io.git\"\n\n暂时就填写这么多就够了,其他的部分暂时先不做修改,保存,退出.\n如果需要了解更多hexo的配置或者想要做更高级的定制,可以查看[官方配置说明](https://hexo.io/docs/configuration.html)\n\n此时我们的Hexo基本已经假设好了,现在生成一下我们的博客看看效果.\n\n``` base\nhexo g -d\n```\n\n这个命令的意思是使用hexo生成整个博客的网页文件,并且上传到我们刚才repo里面填写的git仓库里.hexo会自动检索我们博客文章的改动,删除,增加,并生成一套新的网页.\n等待命令执行完毕.\n\n好了,现在我们访问我们的博客试一下,打开浏览器输入\n```\nhttp://你的github用户名.github.io \n```\n然后回车.\n![](/image/20170224160822.png)\n哈哈!博客架好了!这就是我们博客的主页,并且Hexo还为我们自动生成了一篇示例文章Hello World.\n\n## 如何写文章?\n博客架好了,可是我们怎么写文章呢?\n也很简单,回到我们刚才的git bash命令行模式,进入我们的博客文件夹.使用new命令建立一篇新的文章,.以D:\\blog\\testBlog\\为例\n``` base\ncd /d/blog/testBlog\nhexo new goodDay\n```\n这样我们就建立了一篇名叫goodDay的新文章.\n\n此时,我们打开资源管理器,进入 D:\\blog\\testBlog\\source\\\\_posts.\n我们会发现自动生成了一个goodDay.md文件.我们就需要在这里进行文章的写作.\n从文件的后缀名.md可以看出,这是一个markdown文件,我们需要使用markdown的语法编写,这非常容易,通过不多的文字即可实现文章\\标题\\正文\\代码\\图片的排版,而且非常美观,如果你不了解markdown的语法,可以查看[markdown入门](http://sspai.com/25137/)\n虽然使用系统的记事本就能编辑.mk文件,但是还是强烈建议使用专业的markdown编辑软件,例如[MarkdownPad](http://markdownpad.com),来编辑,可以方便的实现边编辑边预览,非常方便.\n文件夹中还有一个hello-world.md,这就是我们刚才在网站上看到的示例文章.我们也可以参考其中的语法进行我们自己文章的写作.如果我们要这边示例文章了,可以直接删除hello-world.md文件即可,在下次使用hexo生成博客网页后,这边示例文章就会从我们的博客中被删除.\n\n打开goodDay.md,我们可以看到如下的内容\n```\n---\ntitle: xxx\ndate: xxx\n---\n```\n这些以---开始和结尾的内容叫做Front-Matter,负责设置本篇文章的一些属性,此部分的内容不会显示在文章正文中,我们简单的修改一下,文章的标题我们设为\"好天气\",文章写作时间我们设为2017-02-24 15:00,我们再给文章加两个tag:t1和t2,再加一个分类:\"前端知识\",方便以后管理.\ngoodDay.md修改如下\n```\n---\ntitle: 好天气\ndate: 2017-02-24 15:00\ntags: [t1,t2]\ncategories: 前端知识\n---\n```\n\n在---下方我们可以编辑我们文章的正文了,我们简单写两句\n```\n---\ntitle: 好天气\ndate: 2017-02-24 15:00\ntags: [t1,t2]\ncategories: 前端知识\n---\n\n## 好天气啊\n### What a Good Day!\n真是适合春游的好天气\n```\n\n保存,退出.好了我们的文章写完了,可以生成网页并且发布了,还记得命令吗?\n``` base\nhexo g -d\n```\n\n这样我们的一遍文章就已经写好并发布了,去我们的博客上查看一下吧~\\(^o^)/~\n![](/image/20170224163724.png)\n\n好了.到这里,我们已经成功的搭建起了一个自己的技术博客,今后我们需要写文章的时候只需要按照之前写的方式新建.md文件,修改,使用hexo生成网页并发布即可.\n\n由于博主也是才开始玩这一套框架,自己也有很多还没有摸透的地方,今后在使用中如果还有什么进阶的玩法,我会再开一篇文章写出来.\n\n感谢各位能看到这里.希望大家都能玩的开心.\n\n\n\n","source":"_posts/2017-02-23-如何使用gitHub和Hexo搭建个人博客.md","raw":"---\ntitle: 如何使用github和Hexo搭建个人博客\ndate: 2017-02-23 15:05:13\ntags: [Hexo,web,github]\n---\n\n\n## 为什么要写个人博客?\n这一阵子是项目间隙,略闲,之前的项目中学到了很多东西,一直没有时间整理沉淀,现在终于有时间了,列了个计划打算把各种遇到问题和解决经验沉淀到文字里,方便自己今后查看,同时也可以分享给别人,利人利己.\n\n之前工作之余有些零碎经验都是写到网易云笔记之类的笔记应用里,这样虽然比较方便,但是不分享的话别人就不能看,不如博客这种形式,谁都可以搜到,更加便于传播.而且作为一个码农,拥有一个高大上的技术博客,也是一件高逼格的事不是吗 ^_^\n\n## 为什么要自己搭建博客系统?\n想要写一个技术博客,有很多种途径,比较快速简单的方法是找一个像CSDN blo这样的博客平台,申请一个账号直接就可以写,但是总觉得作为程序员,这样还不够酷.那么为什么尝试不自己搭建一个博客试试呢?既可以满足写博客的需求,也可以在搭建的过程中学习web相关的知识,一举两得.而且自己搭建博客可以不用被博客平台的框架束缚,博客的可定制性更强,我们想加什么就可以加什么,那不是更爽?\n\n所以,我果断放弃了博客平台,自己搭架子!开干!\n\n## 大体上需要做什么工作?\n博主毕业以后一直是从事Android App的开发,对web前端的工作接触的比较少,除了计算机和网络的基础知识,几乎是0基础.在查了很多资料以后,大致了解到搭建博客系统主要需要解决两个问题.\n\n1. 怎样便捷的把我们文章中的文字编码成网页文件,并且组织分类建立一个博客网站?\n2. 我们的博客网页文件放在什么地方?\n\n### 博客框架介绍\n以博主的web开发能力,每篇文章都自己写网页是不现实的,而即使是web开发大神,也不会所有网页都自己写,因为太麻烦太繁琐了.\n那么有没有什么自动化的整理排版网页生成工具可以用呢?当然有!我们需要利用博客框架来自动生成网页文件.\n\n博客框架是指一个自动化的程序,我们只需要以框架要求的语法(如markdown)提供我们博客文章的材料,它就会自动帮我们排版文字,转换成网页文件,生成网页层级组织,生成网站首页,一切都是全自动的,我们只需要关心我们文章的内容就够了.自动化万岁!\n\n\n而博客框架一般分为**动态页面框架**和**静态页面框架**两种.\n#### 动态框架\n动态页面框架是指用户在访问我们的网站的时候,所有的网页都是在访问的时候动态生成的,平时没有,访问的时候现场生成,这种框架的好处是搭建简单,现用现做,支持评论互动,功能比较强大.但是需要服务器支持php和数据库.这一类的框架比较著名的是WordPress.\n由于这类框架要求服务器有数据库和php支持,本篇文章暂时不讨论,我会在今后的文章中写一写如何使用vps+wordpress搭建个人博客.\n\n#### 静态框架\n这一类的框架是指我们每次在写完文章后启动框架为我们生成一套网页文件，这套文件部署在服务器上供别人访问，其中的内容是不会变动的，直到我们下次修改或写新的文章后再生成一套新的文件部署到服务器后，网站的内容才会改变．网站上的内容是静态的，因此成为静态博客框架．这类框架比较有名的就是今天要介绍的Hexo.\n这类框架的好处是对服务器要求简单,不需要php和数据库支持.但是比如文章评论等动态改变网页内容的功能,在这种框架中生成的网页中就无法实现了(事实上,如果一定要使用评论功能,可以使用Disque之类的第三方服务集成到Hexo生成的网站中来实现评论,原理还是利用第三方的服务商的数据库和服务器来存放评论数据,本文就不多介绍了).\n\n### 网页存放空间介绍\n我们的网页生成了以后,我们还要找地方去存放它们,这时候我们就有了很多选择.\n\n#### 购买VPS\nVPS是虚拟服务器的简写,相当于一台完整的计算机,可以安装软件,存放数据,下载上传,但是它不在我们面前,而是在VPS服务商的机房里,我们只能通过远程去操作这台计算机.\n由于VPS就相当于一台完整的计算机,所以我们在上面的可操作性比较大,我们可以安装服务器程序用来提供网页下载服务,安装php提供后端处理能力,安装mysql提供数据库服务.非常灵活.因此VPS可以同时支持动态博客框架和静态博客框架.\n\n#### 使用Github pages\nGitHub Pages是GitHub提供的一项免费服务.每个GitHub账号可以申请一个pages仓库用来存放网页文件.而GitHub在已经安装好了服务器程序以便于浏览器访问这些网页.由于GitHub Pages不支持php和数据库,因此只能在上面部署静态博客框架.\n\n## 为什么选择GitHub pages + Hexo?\n看起来GitHub pages比起VPS限制很多,但是Github pages有一个巨大的优势——免费!没错,它是免费的!\n一般国外的VPS像Vurtl、Linode这样的便宜的也要35-40/月,稍微靠谱点的就100+/月了,国内的就更贵,带宽流量限制不说,最便宜的也得60+大洋,这个成本对于个人博客来说太高了.而使用GitHub page,可以免费获得每个账号300M的网页存放空间.对于个人来说足够了,而且GitHub也是程序员牛人聚集的地方,很多大牛也是用GitHub pages搭建自己的博客,因此这也是一件很有逼格的事!\n对于博客框架,动态框架由于需要数据库和php支持,因此就不能使用了,但是静态框架还是可以用的.而Hexo也是现在使用比较广的,也比较简单部署的静态框架.所以我们选择GitHub pages + Hexo来部署我们的博客.\n\n那么,既然方案确定了,那就剩实施了,我们一步一步来完成:\n\n\n## 如何获得github page网页空间?\n使用github我们当然需要先安装git,如果你没有用过git,请先学习一下[Git使用教程](http://www.cnblogs.com/tugenhua0707/p/4050072.html).\n获得github page空间非常简单.首先,你得有一个女朋...啊不对,是github账号,如果你已经有了,那非常好!如果没有,快去[注册一个](https://github.com/join?source=header-home),这个网站对程序员非常有用,真的!\n\n有了github账号之后我们需要按照特定的规则申请github page的数据仓库(repository).\n\n第一步我们点击sign in登录github.\n![](/image/20170223175427.png)\n\n第二步我们点击New repository建立一个新的仓库\n![](/image/20170223174812.png)\n\n第三步在仓库名称里面输入**我们的用户名.github.io**.\n注意!必须是这个名字,其他的名字不行!\n比如我们的用户名是aaa,我们的仓库名就必须是aaa.github.io\n![](/image/20170223175801.png)\n\n第四步选择public,并且点击create repository建立仓库\n\n建立好之后我们就已经有了自己的网页存放空间啦!对!就这么简单!今后通过\n``` \nhttp://我们的用户名.github.io\n```\n就能访问我们的博客啦.\n\n今后我们部署网页的时候只要先clone我们的仓库,然后修改其中的内容(例如添加网页删除网页等),最后commit + push到github上就可以了.当然,这也很麻烦,所以Hexo为我们提供了一键生成+发布的功能,今后连commit+push也可以省去啦,这个我们后面会说.\n\n## 如何部署Hexo框架?\nHexo需要部署在我们自己的计算机上,由于Hexo是基于Nodejs编写的,所以我们首先需要安装Nodejs\n\n在[Nodejs官网](https://nodejs.org/en/)上下载并安装Nodejs.\n\n安装完毕后在我们的电脑里建立一个新的文件夹来存放我们的博客工程文件,例如D:/blog\n\n在文件夹里右键选择git bash 打开命令行\n\n使用npm安装Hexo\n\n``` bash\nnpm install -g hexo-cli\n```\n-g参数是要求全局安装,这样我们以后就可以直接在命令行里使用hexo命令了.\n由于npm安装在国内速度简直是龟速,在使用npm install安装的时候建议使用vpn代理加快安装.\n\n由于我们要提交到github上,我们还需要安装hexo git提交插件.\n``` base\nnpm install hexo-deployer-git --save\n```\n\n下面初始化博客工程\n\n``` bash\nhexo init <folder>\ncd <folder>\nnpm install\n```\n\n上面的folder为博客的工程名,我们可以自己起,例如testBlog\n\n完毕以后我们可以进入我们之前初始化好的文件夹,例如D:/blog/testBlog中,修改_config.yml文件来调整hexo的设置.\n\n> title: 这里填写博客的标题\n> subtitle: 这里填写博客的副标题\n> description: 这里填写博客的描述\n> author: 这里填写博客的作者\n> language: 这里填写博客的语言,如果是中文填写\"zh\"\n> url: 这里填写我们之前申请的博客网页存放空间的网址,例如我们的github用户名为\"aaa\",这里就填写\"http://aaa.github.io\"\n> deploy:\n> type: 这里填写\"git\"\n> repo: 这里填写我们之前申请的git仓库的地址,例如我们的用户名为\"aaa\",则此处填写\"git@github.com:aaa/aaa.github.io.git\"\n\n暂时就填写这么多就够了,其他的部分暂时先不做修改,保存,退出.\n如果需要了解更多hexo的配置或者想要做更高级的定制,可以查看[官方配置说明](https://hexo.io/docs/configuration.html)\n\n此时我们的Hexo基本已经假设好了,现在生成一下我们的博客看看效果.\n\n``` base\nhexo g -d\n```\n\n这个命令的意思是使用hexo生成整个博客的网页文件,并且上传到我们刚才repo里面填写的git仓库里.hexo会自动检索我们博客文章的改动,删除,增加,并生成一套新的网页.\n等待命令执行完毕.\n\n好了,现在我们访问我们的博客试一下,打开浏览器输入\n```\nhttp://你的github用户名.github.io \n```\n然后回车.\n![](/image/20170224160822.png)\n哈哈!博客架好了!这就是我们博客的主页,并且Hexo还为我们自动生成了一篇示例文章Hello World.\n\n## 如何写文章?\n博客架好了,可是我们怎么写文章呢?\n也很简单,回到我们刚才的git bash命令行模式,进入我们的博客文件夹.使用new命令建立一篇新的文章,.以D:\\blog\\testBlog\\为例\n``` base\ncd /d/blog/testBlog\nhexo new goodDay\n```\n这样我们就建立了一篇名叫goodDay的新文章.\n\n此时,我们打开资源管理器,进入 D:\\blog\\testBlog\\source\\\\_posts.\n我们会发现自动生成了一个goodDay.md文件.我们就需要在这里进行文章的写作.\n从文件的后缀名.md可以看出,这是一个markdown文件,我们需要使用markdown的语法编写,这非常容易,通过不多的文字即可实现文章\\标题\\正文\\代码\\图片的排版,而且非常美观,如果你不了解markdown的语法,可以查看[markdown入门](http://sspai.com/25137/)\n虽然使用系统的记事本就能编辑.mk文件,但是还是强烈建议使用专业的markdown编辑软件,例如[MarkdownPad](http://markdownpad.com),来编辑,可以方便的实现边编辑边预览,非常方便.\n文件夹中还有一个hello-world.md,这就是我们刚才在网站上看到的示例文章.我们也可以参考其中的语法进行我们自己文章的写作.如果我们要这边示例文章了,可以直接删除hello-world.md文件即可,在下次使用hexo生成博客网页后,这边示例文章就会从我们的博客中被删除.\n\n打开goodDay.md,我们可以看到如下的内容\n```\n---\ntitle: xxx\ndate: xxx\n---\n```\n这些以---开始和结尾的内容叫做Front-Matter,负责设置本篇文章的一些属性,此部分的内容不会显示在文章正文中,我们简单的修改一下,文章的标题我们设为\"好天气\",文章写作时间我们设为2017-02-24 15:00,我们再给文章加两个tag:t1和t2,再加一个分类:\"前端知识\",方便以后管理.\ngoodDay.md修改如下\n```\n---\ntitle: 好天气\ndate: 2017-02-24 15:00\ntags: [t1,t2]\ncategories: 前端知识\n---\n```\n\n在---下方我们可以编辑我们文章的正文了,我们简单写两句\n```\n---\ntitle: 好天气\ndate: 2017-02-24 15:00\ntags: [t1,t2]\ncategories: 前端知识\n---\n\n## 好天气啊\n### What a Good Day!\n真是适合春游的好天气\n```\n\n保存,退出.好了我们的文章写完了,可以生成网页并且发布了,还记得命令吗?\n``` base\nhexo g -d\n```\n\n这样我们的一遍文章就已经写好并发布了,去我们的博客上查看一下吧~\\(^o^)/~\n![](/image/20170224163724.png)\n\n好了.到这里,我们已经成功的搭建起了一个自己的技术博客,今后我们需要写文章的时候只需要按照之前写的方式新建.md文件,修改,使用hexo生成网页并发布即可.\n\n由于博主也是才开始玩这一套框架,自己也有很多还没有摸透的地方,今后在使用中如果还有什么进阶的玩法,我会再开一篇文章写出来.\n\n感谢各位能看到这里.希望大家都能玩的开心.\n\n\n\n","slug":"如何使用gitHub和Hexo搭建个人博客","published":1,"updated":"2017-02-24T08:53:28.671Z","_id":"cizj6iyqd00027srlvc2mi1zt","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"为什么要写个人博客\"><a href=\"#为什么要写个人博客\" class=\"headerlink\" title=\"为什么要写个人博客?\"></a>为什么要写个人博客?</h2><p>这一阵子是项目间隙,略闲,之前的项目中学到了很多东西,一直没有时间整理沉淀,现在终于有时间了,列了个计划打算把各种遇到问题和解决经验沉淀到文字里,方便自己今后查看,同时也可以分享给别人,利人利己.</p>\n<p>之前工作之余有些零碎经验都是写到网易云笔记之类的笔记应用里,这样虽然比较方便,但是不分享的话别人就不能看,不如博客这种形式,谁都可以搜到,更加便于传播.而且作为一个码农,拥有一个高大上的技术博客,也是一件高逼格的事不是吗 ^_^</p>\n<h2 id=\"为什么要自己搭建博客系统\"><a href=\"#为什么要自己搭建博客系统\" class=\"headerlink\" title=\"为什么要自己搭建博客系统?\"></a>为什么要自己搭建博客系统?</h2><p>想要写一个技术博客,有很多种途径,比较快速简单的方法是找一个像CSDN blo这样的博客平台,申请一个账号直接就可以写,但是总觉得作为程序员,这样还不够酷.那么为什么尝试不自己搭建一个博客试试呢?既可以满足写博客的需求,也可以在搭建的过程中学习web相关的知识,一举两得.而且自己搭建博客可以不用被博客平台的框架束缚,博客的可定制性更强,我们想加什么就可以加什么,那不是更爽?</p>\n<p>所以,我果断放弃了博客平台,自己搭架子!开干!</p>\n<h2 id=\"大体上需要做什么工作\"><a href=\"#大体上需要做什么工作\" class=\"headerlink\" title=\"大体上需要做什么工作?\"></a>大体上需要做什么工作?</h2><p>博主毕业以后一直是从事Android App的开发,对web前端的工作接触的比较少,除了计算机和网络的基础知识,几乎是0基础.在查了很多资料以后,大致了解到搭建博客系统主要需要解决两个问题.</p>\n<ol>\n<li>怎样便捷的把我们文章中的文字编码成网页文件,并且组织分类建立一个博客网站?</li>\n<li>我们的博客网页文件放在什么地方?</li>\n</ol>\n<h3 id=\"博客框架介绍\"><a href=\"#博客框架介绍\" class=\"headerlink\" title=\"博客框架介绍\"></a>博客框架介绍</h3><p>以博主的web开发能力,每篇文章都自己写网页是不现实的,而即使是web开发大神,也不会所有网页都自己写,因为太麻烦太繁琐了.<br>那么有没有什么自动化的整理排版网页生成工具可以用呢?当然有!我们需要利用博客框架来自动生成网页文件.</p>\n<p>博客框架是指一个自动化的程序,我们只需要以框架要求的语法(如markdown)提供我们博客文章的材料,它就会自动帮我们排版文字,转换成网页文件,生成网页层级组织,生成网站首页,一切都是全自动的,我们只需要关心我们文章的内容就够了.自动化万岁!</p>\n<p>而博客框架一般分为<strong>动态页面框架</strong>和<strong>静态页面框架</strong>两种.</p>\n<h4 id=\"动态框架\"><a href=\"#动态框架\" class=\"headerlink\" title=\"动态框架\"></a>动态框架</h4><p>动态页面框架是指用户在访问我们的网站的时候,所有的网页都是在访问的时候动态生成的,平时没有,访问的时候现场生成,这种框架的好处是搭建简单,现用现做,支持评论互动,功能比较强大.但是需要服务器支持php和数据库.这一类的框架比较著名的是WordPress.<br>由于这类框架要求服务器有数据库和php支持,本篇文章暂时不讨论,我会在今后的文章中写一写如何使用vps+wordpress搭建个人博客.</p>\n<h4 id=\"静态框架\"><a href=\"#静态框架\" class=\"headerlink\" title=\"静态框架\"></a>静态框架</h4><p>这一类的框架是指我们每次在写完文章后启动框架为我们生成一套网页文件，这套文件部署在服务器上供别人访问，其中的内容是不会变动的，直到我们下次修改或写新的文章后再生成一套新的文件部署到服务器后，网站的内容才会改变．网站上的内容是静态的，因此成为静态博客框架．这类框架比较有名的就是今天要介绍的Hexo.<br>这类框架的好处是对服务器要求简单,不需要php和数据库支持.但是比如文章评论等动态改变网页内容的功能,在这种框架中生成的网页中就无法实现了(事实上,如果一定要使用评论功能,可以使用Disque之类的第三方服务集成到Hexo生成的网站中来实现评论,原理还是利用第三方的服务商的数据库和服务器来存放评论数据,本文就不多介绍了).</p>\n<h3 id=\"网页存放空间介绍\"><a href=\"#网页存放空间介绍\" class=\"headerlink\" title=\"网页存放空间介绍\"></a>网页存放空间介绍</h3><p>我们的网页生成了以后,我们还要找地方去存放它们,这时候我们就有了很多选择.</p>\n<h4 id=\"购买VPS\"><a href=\"#购买VPS\" class=\"headerlink\" title=\"购买VPS\"></a>购买VPS</h4><p>VPS是虚拟服务器的简写,相当于一台完整的计算机,可以安装软件,存放数据,下载上传,但是它不在我们面前,而是在VPS服务商的机房里,我们只能通过远程去操作这台计算机.<br>由于VPS就相当于一台完整的计算机,所以我们在上面的可操作性比较大,我们可以安装服务器程序用来提供网页下载服务,安装php提供后端处理能力,安装mysql提供数据库服务.非常灵活.因此VPS可以同时支持动态博客框架和静态博客框架.</p>\n<h4 id=\"使用Github-pages\"><a href=\"#使用Github-pages\" class=\"headerlink\" title=\"使用Github pages\"></a>使用Github pages</h4><p>GitHub Pages是GitHub提供的一项免费服务.每个GitHub账号可以申请一个pages仓库用来存放网页文件.而GitHub在已经安装好了服务器程序以便于浏览器访问这些网页.由于GitHub Pages不支持php和数据库,因此只能在上面部署静态博客框架.</p>\n<h2 id=\"为什么选择GitHub-pages-Hexo\"><a href=\"#为什么选择GitHub-pages-Hexo\" class=\"headerlink\" title=\"为什么选择GitHub pages + Hexo?\"></a>为什么选择GitHub pages + Hexo?</h2><p>看起来GitHub pages比起VPS限制很多,但是Github pages有一个巨大的优势——免费!没错,它是免费的!<br>一般国外的VPS像Vurtl、Linode这样的便宜的也要35-40/月,稍微靠谱点的就100+/月了,国内的就更贵,带宽流量限制不说,最便宜的也得60+大洋,这个成本对于个人博客来说太高了.而使用GitHub page,可以免费获得每个账号300M的网页存放空间.对于个人来说足够了,而且GitHub也是程序员牛人聚集的地方,很多大牛也是用GitHub pages搭建自己的博客,因此这也是一件很有逼格的事!<br>对于博客框架,动态框架由于需要数据库和php支持,因此就不能使用了,但是静态框架还是可以用的.而Hexo也是现在使用比较广的,也比较简单部署的静态框架.所以我们选择GitHub pages + Hexo来部署我们的博客.</p>\n<p>那么,既然方案确定了,那就剩实施了,我们一步一步来完成:</p>\n<h2 id=\"如何获得github-page网页空间\"><a href=\"#如何获得github-page网页空间\" class=\"headerlink\" title=\"如何获得github page网页空间?\"></a>如何获得github page网页空间?</h2><p>使用github我们当然需要先安装git,如果你没有用过git,请先学习一下<a href=\"http://www.cnblogs.com/tugenhua0707/p/4050072.html\" target=\"_blank\" rel=\"external\">Git使用教程</a>.<br>获得github page空间非常简单.首先,你得有一个女朋…啊不对,是github账号,如果你已经有了,那非常好!如果没有,快去<a href=\"https://github.com/join?source=header-home\" target=\"_blank\" rel=\"external\">注册一个</a>,这个网站对程序员非常有用,真的!</p>\n<p>有了github账号之后我们需要按照特定的规则申请github page的数据仓库(repository).</p>\n<p>第一步我们点击sign in登录github.<br><img src=\"/image/20170223175427.png\" alt=\"\"></p>\n<p>第二步我们点击New repository建立一个新的仓库<br><img src=\"/image/20170223174812.png\" alt=\"\"></p>\n<p>第三步在仓库名称里面输入<strong>我们的用户名.github.io</strong>.<br>注意!必须是这个名字,其他的名字不行!<br>比如我们的用户名是aaa,我们的仓库名就必须是aaa.github.io<br><img src=\"/image/20170223175801.png\" alt=\"\"></p>\n<p>第四步选择public,并且点击create repository建立仓库</p>\n<p>建立好之后我们就已经有了自己的网页存放空间啦!对!就这么简单!今后通过<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://我们的用户名.github.io</div></pre></td></tr></table></figure></p>\n<p>就能访问我们的博客啦.</p>\n<p>今后我们部署网页的时候只要先clone我们的仓库,然后修改其中的内容(例如添加网页删除网页等),最后commit + push到github上就可以了.当然,这也很麻烦,所以Hexo为我们提供了一键生成+发布的功能,今后连commit+push也可以省去啦,这个我们后面会说.</p>\n<h2 id=\"如何部署Hexo框架\"><a href=\"#如何部署Hexo框架\" class=\"headerlink\" title=\"如何部署Hexo框架?\"></a>如何部署Hexo框架?</h2><p>Hexo需要部署在我们自己的计算机上,由于Hexo是基于Nodejs编写的,所以我们首先需要安装Nodejs</p>\n<p>在<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"external\">Nodejs官网</a>上下载并安装Nodejs.</p>\n<p>安装完毕后在我们的电脑里建立一个新的文件夹来存放我们的博客工程文件,例如D:/blog</p>\n<p>在文件夹里右键选择git bash 打开命令行</p>\n<p>使用npm安装Hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>-g参数是要求全局安装,这样我们以后就可以直接在命令行里使用hexo命令了.<br>由于npm安装在国内速度简直是龟速,在使用npm install安装的时候建议使用vpn代理加快安装.</p>\n<p>由于我们要提交到github上,我们还需要安装hexo git提交插件.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>下面初始化博客工程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div><div class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>上面的folder为博客的工程名,我们可以自己起,例如testBlog</p>\n<p>完毕以后我们可以进入我们之前初始化好的文件夹,例如D:/blog/testBlog中,修改_config.yml文件来调整hexo的设置.</p>\n<blockquote>\n<p>title: 这里填写博客的标题<br>subtitle: 这里填写博客的副标题<br>description: 这里填写博客的描述<br>author: 这里填写博客的作者<br>language: 这里填写博客的语言,如果是中文填写”zh”<br>url: 这里填写我们之前申请的博客网页存放空间的网址,例如我们的github用户名为”aaa”,这里就填写”<a href=\"http://aaa.github.io\" target=\"_blank\" rel=\"external\">http://aaa.github.io</a>“<br>deploy:<br>type: 这里填写”git”<br>repo: 这里填写我们之前申请的git仓库的地址,例如我们的用户名为”aaa”,则此处填写”git@github.com:aaa/aaa.github.io.git”</p>\n</blockquote>\n<p>暂时就填写这么多就够了,其他的部分暂时先不做修改,保存,退出.<br>如果需要了解更多hexo的配置或者想要做更高级的定制,可以查看<a href=\"https://hexo.io/docs/configuration.html\" target=\"_blank\" rel=\"external\">官方配置说明</a></p>\n<p>此时我们的Hexo基本已经假设好了,现在生成一下我们的博客看看效果.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure>\n<p>这个命令的意思是使用hexo生成整个博客的网页文件,并且上传到我们刚才repo里面填写的git仓库里.hexo会自动检索我们博客文章的改动,删除,增加,并生成一套新的网页.<br>等待命令执行完毕.</p>\n<p>好了,现在我们访问我们的博客试一下,打开浏览器输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://你的github用户名.github.io</div></pre></td></tr></table></figure></p>\n<p>然后回车.<br><img src=\"/image/20170224160822.png\" alt=\"\"><br>哈哈!博客架好了!这就是我们博客的主页,并且Hexo还为我们自动生成了一篇示例文章Hello World.</p>\n<h2 id=\"如何写文章\"><a href=\"#如何写文章\" class=\"headerlink\" title=\"如何写文章?\"></a>如何写文章?</h2><p>博客架好了,可是我们怎么写文章呢?<br>也很简单,回到我们刚才的git bash命令行模式,进入我们的博客文件夹.使用new命令建立一篇新的文章,.以D:\\blog\\testBlog\\为例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /d/blog/testBlog</div><div class=\"line\">hexo new goodDay</div></pre></td></tr></table></figure></p>\n<p>这样我们就建立了一篇名叫goodDay的新文章.</p>\n<p>此时,我们打开资源管理器,进入 D:\\blog\\testBlog\\source\\_posts.<br>我们会发现自动生成了一个goodDay.md文件.我们就需要在这里进行文章的写作.<br>从文件的后缀名.md可以看出,这是一个markdown文件,我们需要使用markdown的语法编写,这非常容易,通过不多的文字即可实现文章\\标题\\正文\\代码\\图片的排版,而且非常美观,如果你不了解markdown的语法,可以查看<a href=\"http://sspai.com/25137/\" target=\"_blank\" rel=\"external\">markdown入门</a><br>虽然使用系统的记事本就能编辑.mk文件,但是还是强烈建议使用专业的markdown编辑软件,例如<a href=\"http://markdownpad.com\" target=\"_blank\" rel=\"external\">MarkdownPad</a>,来编辑,可以方便的实现边编辑边预览,非常方便.<br>文件夹中还有一个hello-world.md,这就是我们刚才在网站上看到的示例文章.我们也可以参考其中的语法进行我们自己文章的写作.如果我们要这边示例文章了,可以直接删除hello-world.md文件即可,在下次使用hexo生成博客网页后,这边示例文章就会从我们的博客中被删除.</p>\n<p>打开goodDay.md,我们可以看到如下的内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: xxx</div><div class=\"line\">date: xxx</div><div class=\"line\">---</div></pre></td></tr></table></figure></p>\n<p>这些以—开始和结尾的内容叫做Front-Matter,负责设置本篇文章的一些属性,此部分的内容不会显示在文章正文中,我们简单的修改一下,文章的标题我们设为”好天气”,文章写作时间我们设为2017-02-24 15:00,我们再给文章加两个tag:t1和t2,再加一个分类:”前端知识”,方便以后管理.<br>goodDay.md修改如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 好天气</div><div class=\"line\">date: 2017-02-24 15:00</div><div class=\"line\">tags: [t1,t2]</div><div class=\"line\">categories: 前端知识</div><div class=\"line\">---</div></pre></td></tr></table></figure></p>\n<p>在—下方我们可以编辑我们文章的正文了,我们简单写两句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 好天气</div><div class=\"line\">date: 2017-02-24 15:00</div><div class=\"line\">tags: [t1,t2]</div><div class=\"line\">categories: 前端知识</div><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">## 好天气啊</div><div class=\"line\">### What a Good Day!</div><div class=\"line\">真是适合春游的好天气</div></pre></td></tr></table></figure></p>\n<p>保存,退出.好了我们的文章写完了,可以生成网页并且发布了,还记得命令吗?<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure></p>\n<p>这样我们的一遍文章就已经写好并发布了,去我们的博客上查看一下吧~(^o^)/~<br><img src=\"/image/20170224163724.png\" alt=\"\"></p>\n<p>好了.到这里,我们已经成功的搭建起了一个自己的技术博客,今后我们需要写文章的时候只需要按照之前写的方式新建.md文件,修改,使用hexo生成网页并发布即可.</p>\n<p>由于博主也是才开始玩这一套框架,自己也有很多还没有摸透的地方,今后在使用中如果还有什么进阶的玩法,我会再开一篇文章写出来.</p>\n<p>感谢各位能看到这里.希望大家都能玩的开心.</p>\n","excerpt":"","more":"<h2 id=\"为什么要写个人博客\"><a href=\"#为什么要写个人博客\" class=\"headerlink\" title=\"为什么要写个人博客?\"></a>为什么要写个人博客?</h2><p>这一阵子是项目间隙,略闲,之前的项目中学到了很多东西,一直没有时间整理沉淀,现在终于有时间了,列了个计划打算把各种遇到问题和解决经验沉淀到文字里,方便自己今后查看,同时也可以分享给别人,利人利己.</p>\n<p>之前工作之余有些零碎经验都是写到网易云笔记之类的笔记应用里,这样虽然比较方便,但是不分享的话别人就不能看,不如博客这种形式,谁都可以搜到,更加便于传播.而且作为一个码农,拥有一个高大上的技术博客,也是一件高逼格的事不是吗 ^_^</p>\n<h2 id=\"为什么要自己搭建博客系统\"><a href=\"#为什么要自己搭建博客系统\" class=\"headerlink\" title=\"为什么要自己搭建博客系统?\"></a>为什么要自己搭建博客系统?</h2><p>想要写一个技术博客,有很多种途径,比较快速简单的方法是找一个像CSDN blo这样的博客平台,申请一个账号直接就可以写,但是总觉得作为程序员,这样还不够酷.那么为什么尝试不自己搭建一个博客试试呢?既可以满足写博客的需求,也可以在搭建的过程中学习web相关的知识,一举两得.而且自己搭建博客可以不用被博客平台的框架束缚,博客的可定制性更强,我们想加什么就可以加什么,那不是更爽?</p>\n<p>所以,我果断放弃了博客平台,自己搭架子!开干!</p>\n<h2 id=\"大体上需要做什么工作\"><a href=\"#大体上需要做什么工作\" class=\"headerlink\" title=\"大体上需要做什么工作?\"></a>大体上需要做什么工作?</h2><p>博主毕业以后一直是从事Android App的开发,对web前端的工作接触的比较少,除了计算机和网络的基础知识,几乎是0基础.在查了很多资料以后,大致了解到搭建博客系统主要需要解决两个问题.</p>\n<ol>\n<li>怎样便捷的把我们文章中的文字编码成网页文件,并且组织分类建立一个博客网站?</li>\n<li>我们的博客网页文件放在什么地方?</li>\n</ol>\n<h3 id=\"博客框架介绍\"><a href=\"#博客框架介绍\" class=\"headerlink\" title=\"博客框架介绍\"></a>博客框架介绍</h3><p>以博主的web开发能力,每篇文章都自己写网页是不现实的,而即使是web开发大神,也不会所有网页都自己写,因为太麻烦太繁琐了.<br>那么有没有什么自动化的整理排版网页生成工具可以用呢?当然有!我们需要利用博客框架来自动生成网页文件.</p>\n<p>博客框架是指一个自动化的程序,我们只需要以框架要求的语法(如markdown)提供我们博客文章的材料,它就会自动帮我们排版文字,转换成网页文件,生成网页层级组织,生成网站首页,一切都是全自动的,我们只需要关心我们文章的内容就够了.自动化万岁!</p>\n<p>而博客框架一般分为<strong>动态页面框架</strong>和<strong>静态页面框架</strong>两种.</p>\n<h4 id=\"动态框架\"><a href=\"#动态框架\" class=\"headerlink\" title=\"动态框架\"></a>动态框架</h4><p>动态页面框架是指用户在访问我们的网站的时候,所有的网页都是在访问的时候动态生成的,平时没有,访问的时候现场生成,这种框架的好处是搭建简单,现用现做,支持评论互动,功能比较强大.但是需要服务器支持php和数据库.这一类的框架比较著名的是WordPress.<br>由于这类框架要求服务器有数据库和php支持,本篇文章暂时不讨论,我会在今后的文章中写一写如何使用vps+wordpress搭建个人博客.</p>\n<h4 id=\"静态框架\"><a href=\"#静态框架\" class=\"headerlink\" title=\"静态框架\"></a>静态框架</h4><p>这一类的框架是指我们每次在写完文章后启动框架为我们生成一套网页文件，这套文件部署在服务器上供别人访问，其中的内容是不会变动的，直到我们下次修改或写新的文章后再生成一套新的文件部署到服务器后，网站的内容才会改变．网站上的内容是静态的，因此成为静态博客框架．这类框架比较有名的就是今天要介绍的Hexo.<br>这类框架的好处是对服务器要求简单,不需要php和数据库支持.但是比如文章评论等动态改变网页内容的功能,在这种框架中生成的网页中就无法实现了(事实上,如果一定要使用评论功能,可以使用Disque之类的第三方服务集成到Hexo生成的网站中来实现评论,原理还是利用第三方的服务商的数据库和服务器来存放评论数据,本文就不多介绍了).</p>\n<h3 id=\"网页存放空间介绍\"><a href=\"#网页存放空间介绍\" class=\"headerlink\" title=\"网页存放空间介绍\"></a>网页存放空间介绍</h3><p>我们的网页生成了以后,我们还要找地方去存放它们,这时候我们就有了很多选择.</p>\n<h4 id=\"购买VPS\"><a href=\"#购买VPS\" class=\"headerlink\" title=\"购买VPS\"></a>购买VPS</h4><p>VPS是虚拟服务器的简写,相当于一台完整的计算机,可以安装软件,存放数据,下载上传,但是它不在我们面前,而是在VPS服务商的机房里,我们只能通过远程去操作这台计算机.<br>由于VPS就相当于一台完整的计算机,所以我们在上面的可操作性比较大,我们可以安装服务器程序用来提供网页下载服务,安装php提供后端处理能力,安装mysql提供数据库服务.非常灵活.因此VPS可以同时支持动态博客框架和静态博客框架.</p>\n<h4 id=\"使用Github-pages\"><a href=\"#使用Github-pages\" class=\"headerlink\" title=\"使用Github pages\"></a>使用Github pages</h4><p>GitHub Pages是GitHub提供的一项免费服务.每个GitHub账号可以申请一个pages仓库用来存放网页文件.而GitHub在已经安装好了服务器程序以便于浏览器访问这些网页.由于GitHub Pages不支持php和数据库,因此只能在上面部署静态博客框架.</p>\n<h2 id=\"为什么选择GitHub-pages-Hexo\"><a href=\"#为什么选择GitHub-pages-Hexo\" class=\"headerlink\" title=\"为什么选择GitHub pages + Hexo?\"></a>为什么选择GitHub pages + Hexo?</h2><p>看起来GitHub pages比起VPS限制很多,但是Github pages有一个巨大的优势——免费!没错,它是免费的!<br>一般国外的VPS像Vurtl、Linode这样的便宜的也要35-40/月,稍微靠谱点的就100+/月了,国内的就更贵,带宽流量限制不说,最便宜的也得60+大洋,这个成本对于个人博客来说太高了.而使用GitHub page,可以免费获得每个账号300M的网页存放空间.对于个人来说足够了,而且GitHub也是程序员牛人聚集的地方,很多大牛也是用GitHub pages搭建自己的博客,因此这也是一件很有逼格的事!<br>对于博客框架,动态框架由于需要数据库和php支持,因此就不能使用了,但是静态框架还是可以用的.而Hexo也是现在使用比较广的,也比较简单部署的静态框架.所以我们选择GitHub pages + Hexo来部署我们的博客.</p>\n<p>那么,既然方案确定了,那就剩实施了,我们一步一步来完成:</p>\n<h2 id=\"如何获得github-page网页空间\"><a href=\"#如何获得github-page网页空间\" class=\"headerlink\" title=\"如何获得github page网页空间?\"></a>如何获得github page网页空间?</h2><p>使用github我们当然需要先安装git,如果你没有用过git,请先学习一下<a href=\"http://www.cnblogs.com/tugenhua0707/p/4050072.html\">Git使用教程</a>.<br>获得github page空间非常简单.首先,你得有一个女朋…啊不对,是github账号,如果你已经有了,那非常好!如果没有,快去<a href=\"https://github.com/join?source=header-home\">注册一个</a>,这个网站对程序员非常有用,真的!</p>\n<p>有了github账号之后我们需要按照特定的规则申请github page的数据仓库(repository).</p>\n<p>第一步我们点击sign in登录github.<br><img src=\"/image/20170223175427.png\" alt=\"\"></p>\n<p>第二步我们点击New repository建立一个新的仓库<br><img src=\"/image/20170223174812.png\" alt=\"\"></p>\n<p>第三步在仓库名称里面输入<strong>我们的用户名.github.io</strong>.<br>注意!必须是这个名字,其他的名字不行!<br>比如我们的用户名是aaa,我们的仓库名就必须是aaa.github.io<br><img src=\"/image/20170223175801.png\" alt=\"\"></p>\n<p>第四步选择public,并且点击create repository建立仓库</p>\n<p>建立好之后我们就已经有了自己的网页存放空间啦!对!就这么简单!今后通过<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://我们的用户名.github.io</div></pre></td></tr></table></figure></p>\n<p>就能访问我们的博客啦.</p>\n<p>今后我们部署网页的时候只要先clone我们的仓库,然后修改其中的内容(例如添加网页删除网页等),最后commit + push到github上就可以了.当然,这也很麻烦,所以Hexo为我们提供了一键生成+发布的功能,今后连commit+push也可以省去啦,这个我们后面会说.</p>\n<h2 id=\"如何部署Hexo框架\"><a href=\"#如何部署Hexo框架\" class=\"headerlink\" title=\"如何部署Hexo框架?\"></a>如何部署Hexo框架?</h2><p>Hexo需要部署在我们自己的计算机上,由于Hexo是基于Nodejs编写的,所以我们首先需要安装Nodejs</p>\n<p>在<a href=\"https://nodejs.org/en/\">Nodejs官网</a>上下载并安装Nodejs.</p>\n<p>安装完毕后在我们的电脑里建立一个新的文件夹来存放我们的博客工程文件,例如D:/blog</p>\n<p>在文件夹里右键选择git bash 打开命令行</p>\n<p>使用npm安装Hexo</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g hexo-cli</div></pre></td></tr></table></figure>\n<p>-g参数是要求全局安装,这样我们以后就可以直接在命令行里使用hexo命令了.<br>由于npm安装在国内速度简直是龟速,在使用npm install安装的时候建议使用vpn代理加快安装.</p>\n<p>由于我们要提交到github上,我们还需要安装hexo git提交插件.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>\n<p>下面初始化博客工程</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo init &lt;folder&gt;</div><div class=\"line\"><span class=\"built_in\">cd</span> &lt;folder&gt;</div><div class=\"line\">npm install</div></pre></td></tr></table></figure>\n<p>上面的folder为博客的工程名,我们可以自己起,例如testBlog</p>\n<p>完毕以后我们可以进入我们之前初始化好的文件夹,例如D:/blog/testBlog中,修改_config.yml文件来调整hexo的设置.</p>\n<blockquote>\n<p>title: 这里填写博客的标题<br>subtitle: 这里填写博客的副标题<br>description: 这里填写博客的描述<br>author: 这里填写博客的作者<br>language: 这里填写博客的语言,如果是中文填写”zh”<br>url: 这里填写我们之前申请的博客网页存放空间的网址,例如我们的github用户名为”aaa”,这里就填写”<a href=\"http://aaa.github.io\">http://aaa.github.io</a>“<br>deploy:<br>type: 这里填写”git”<br>repo: 这里填写我们之前申请的git仓库的地址,例如我们的用户名为”aaa”,则此处填写”git@github.com:aaa/aaa.github.io.git”</p>\n</blockquote>\n<p>暂时就填写这么多就够了,其他的部分暂时先不做修改,保存,退出.<br>如果需要了解更多hexo的配置或者想要做更高级的定制,可以查看<a href=\"https://hexo.io/docs/configuration.html\">官方配置说明</a></p>\n<p>此时我们的Hexo基本已经假设好了,现在生成一下我们的博客看看效果.</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure>\n<p>这个命令的意思是使用hexo生成整个博客的网页文件,并且上传到我们刚才repo里面填写的git仓库里.hexo会自动检索我们博客文章的改动,删除,增加,并生成一套新的网页.<br>等待命令执行完毕.</p>\n<p>好了,现在我们访问我们的博客试一下,打开浏览器输入<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">http://你的github用户名.github.io</div></pre></td></tr></table></figure></p>\n<p>然后回车.<br><img src=\"/image/20170224160822.png\" alt=\"\"><br>哈哈!博客架好了!这就是我们博客的主页,并且Hexo还为我们自动生成了一篇示例文章Hello World.</p>\n<h2 id=\"如何写文章\"><a href=\"#如何写文章\" class=\"headerlink\" title=\"如何写文章?\"></a>如何写文章?</h2><p>博客架好了,可是我们怎么写文章呢?<br>也很简单,回到我们刚才的git bash命令行模式,进入我们的博客文件夹.使用new命令建立一篇新的文章,.以D:\\blog\\testBlog\\为例<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /d/blog/testBlog</div><div class=\"line\">hexo new goodDay</div></pre></td></tr></table></figure></p>\n<p>这样我们就建立了一篇名叫goodDay的新文章.</p>\n<p>此时,我们打开资源管理器,进入 D:\\blog\\testBlog\\source\\_posts.<br>我们会发现自动生成了一个goodDay.md文件.我们就需要在这里进行文章的写作.<br>从文件的后缀名.md可以看出,这是一个markdown文件,我们需要使用markdown的语法编写,这非常容易,通过不多的文字即可实现文章\\标题\\正文\\代码\\图片的排版,而且非常美观,如果你不了解markdown的语法,可以查看<a href=\"http://sspai.com/25137/\">markdown入门</a><br>虽然使用系统的记事本就能编辑.mk文件,但是还是强烈建议使用专业的markdown编辑软件,例如<a href=\"http://markdownpad.com\">MarkdownPad</a>,来编辑,可以方便的实现边编辑边预览,非常方便.<br>文件夹中还有一个hello-world.md,这就是我们刚才在网站上看到的示例文章.我们也可以参考其中的语法进行我们自己文章的写作.如果我们要这边示例文章了,可以直接删除hello-world.md文件即可,在下次使用hexo生成博客网页后,这边示例文章就会从我们的博客中被删除.</p>\n<p>打开goodDay.md,我们可以看到如下的内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: xxx</div><div class=\"line\">date: xxx</div><div class=\"line\">---</div></pre></td></tr></table></figure></p>\n<p>这些以—开始和结尾的内容叫做Front-Matter,负责设置本篇文章的一些属性,此部分的内容不会显示在文章正文中,我们简单的修改一下,文章的标题我们设为”好天气”,文章写作时间我们设为2017-02-24 15:00,我们再给文章加两个tag:t1和t2,再加一个分类:”前端知识”,方便以后管理.<br>goodDay.md修改如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 好天气</div><div class=\"line\">date: 2017-02-24 15:00</div><div class=\"line\">tags: [t1,t2]</div><div class=\"line\">categories: 前端知识</div><div class=\"line\">---</div></pre></td></tr></table></figure></p>\n<p>在—下方我们可以编辑我们文章的正文了,我们简单写两句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">---</div><div class=\"line\">title: 好天气</div><div class=\"line\">date: 2017-02-24 15:00</div><div class=\"line\">tags: [t1,t2]</div><div class=\"line\">categories: 前端知识</div><div class=\"line\">---</div><div class=\"line\"></div><div class=\"line\">## 好天气啊</div><div class=\"line\">### What a Good Day!</div><div class=\"line\">真是适合春游的好天气</div></pre></td></tr></table></figure></p>\n<p>保存,退出.好了我们的文章写完了,可以生成网页并且发布了,还记得命令吗?<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">hexo g -d</div></pre></td></tr></table></figure></p>\n<p>这样我们的一遍文章就已经写好并发布了,去我们的博客上查看一下吧~(^o^)/~<br><img src=\"/image/20170224163724.png\" alt=\"\"></p>\n<p>好了.到这里,我们已经成功的搭建起了一个自己的技术博客,今后我们需要写文章的时候只需要按照之前写的方式新建.md文件,修改,使用hexo生成网页并发布即可.</p>\n<p>由于博主也是才开始玩这一套框架,自己也有很多还没有摸透的地方,今后在使用中如果还有什么进阶的玩法,我会再开一篇文章写出来.</p>\n<p>感谢各位能看到这里.希望大家都能玩的开心.</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cizj6iyqd00027srlvc2mi1zt","tag_id":"cizj6iyqh00037srl07sb0p19","_id":"cizj6iyqm00067srlx753pzod"},{"post_id":"cizj6iyqd00027srlvc2mi1zt","tag_id":"cizj6iyql00047srlvs43d9qj","_id":"cizj6iyqn00077srlv5ht4usj"},{"post_id":"cizj6iyqd00027srlvc2mi1zt","tag_id":"cizj6iyqm00057srldxew5xef","_id":"cizj6iyqn00087srlrh1lev4t"}],"Tag":[{"name":"Hexo","_id":"cizj6iyqh00037srl07sb0p19"},{"name":"web","_id":"cizj6iyql00047srlvs43d9qj"},{"name":"github","_id":"cizj6iyqm00057srldxew5xef"}]}}